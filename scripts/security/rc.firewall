#!/bin/sh
#
# IPTables Firewall Script
# http://0tue0.com
# tueGroup
# Smaller than Life Projects
# By: MreDD
# projects - @ - 0tue0 (dot) com
## 
# Much Thanx to Veekahn
#  for helping with specific IP lines. :)
#
## Last Update
## Sat Jan 31 12:04:22 PST 2009
#
# Path to Script
SCRIPT=/etc/rc.firewall
## Specify where IP Tables is located
#
IPTABLES=/usr/sbin/iptables

# Path to iptables-save
IPTABLESSAVE=/usr/sbin/iptables-save

# Path to iptables-restore
IPTABLESRESTORE=/usr/sbin/iptables-restore

# Path to IPTables Rules
FWSAVE=/etc/iptables/iptables.rules

# Location of ModProbe
MODPROBE=/sbin/modprobe

#
## List Locations
#
WHITELIST=/usr/local/etc/whitelist.txt
BLACKLIST=/usr/local/etc/blacklist.txt

# Specify External IP's
EIP1=""
EIP2=""
EIP3=""
EIP4=""
EIP5=""
EIP6=""

# Specify Internal IP's
IIP1=""
IIP2=""
IIP3=""
IIP4=""
IIP5=""
IIP6=""

###
case "$1" in
  start)
    echo "Start FW Script"

    # IPTables-Modules
    $MODPROBE ip_tables
    $MODPROBE iptable_filter
    # Connection-Tracking-Module
    $MODPROBE ip_conntrack
    #$MODPROBE ip_conntrack_irc
    $MODPROBE ip_conntrack_ftp

    # Table Flush
    $IPTABLES -F
    $IPTABLES -t nat -F
    $IPTABLES -t mangle -F
    $IPTABLES -X
    $IPTABLES -t nat -X
    $IPTABLES -t mangle -X
    # Rules for Stealth
    $IPTABLES -F INPUT
    $IPTABLES -N inbound
    $IPTABLES -A INPUT -i eth0 -j inbound
    $IPTABLES -A INPUT -i lo -j ACCEPT
    #
    $IPTABLES -A inbound -m state --state ESTABLISHED -j ACCEPT
    $IPTABLES -A inbound -m state --state RELATED -j ACCEPT
    # 
    $IPTABLES -A INPUT -i eth0 -p tcp --syn -j DROP
    $IPTABLES -A INPUT -i eth0 -p tcp --dport 0 -j DROP
    $IPTABLES -A INPUT -i eth0 -p tcp --dport 1 -j DROP

    echo 'Allowing Localhost'
    #Allow localhost.
    $IPTABLES -A INPUT -t filter -s 127.0.0.1 -j ACCEPT

    # Default-Policies
    $IPTABLES -P INPUT DROP
    $IPTABLES -P OUTPUT DROP
    $IPTABLES -P FORWARD DROP

    # MY_REJECT-Chain
    $IPTABLES -N MY_REJECT

    # MY_REJECT fill
    $IPTABLES -A MY_REJECT -p tcp -m limit --limit 7200/h -j LOG --log-prefix "REJECT TCP "
    $IPTABLES -A MY_REJECT -p tcp -j REJECT --reject-with tcp-reset
    $IPTABLES -A MY_REJECT -p udp -m limit --limit 7200/h -j LOG --log-prefix "REJECT UDP "
    $IPTABLES -A MY_REJECT -p udp -j REJECT --reject-with icmp-port-unreachable
    $IPTABLES -A MY_REJECT -p icmp -m limit --limit 7200/h -j LOG --log-prefix "DROP ICMP "
    $IPTABLES -A MY_REJECT -p icmp -j DROP
    $IPTABLES -A MY_REJECT -m limit --limit 7200/h -j LOG --log-prefix "REJECT OTHER "
    $IPTABLES -A MY_REJECT -j REJECT --reject-with icmp-proto-unreachable

    # MY_DROP-Chain
    $IPTABLES -N MY_DROP
    $IPTABLES -A MY_DROP -j DROP

    # All Packet Protocol
    $IPTABLES -A INPUT -j LOG --log-prefix "INPUT LOG "
    $IPTABLES -A OUTPUT -j LOG --log-prefix "OUTPUT LOGæ"
    $IPTABLES -A FORWARD -j LOG --log-prefix "FORWARD LOG "

    # Corrupt Packet drop
    $IPTABLES -A INPUT -m state --state INVALID -j DROP
    $IPTABLES -A OUTPUT -m state --state INVALID -j DROP
    $IPTABLES -A FORWARD -m state --state INVALID -j DROP

    # Stealth Scans etc. DROPpen
    # Non Flags
    $IPTABLES -A INPUT -i eth0 -p tcp --tcp-flags ALL NONE -j MY_DROP
    $IPTABLES -A FORWARD -p tcp --tcp-flags ALL NONE -j MY_DROP

    # SYN and FIN
    $IPTABLES -A INPUT -p tcp --tcp-flags SYN,FIN SYN,FIN -j MY_DROP
    $IPTABLES -A FORWARD -p tcp --tcp-flags SYN,FIN SYN,FIN -j MY_DROP

    # SYN and RST set at same time
    $IPTABLES -A INPUT -p tcp --tcp-flags SYN,RST SYN,RST -j MY_DROP
    $IPTABLES -A FORWARD -p tcp --tcp-flags SYN,RST SYN,RST -j MY_DROP

    # FIN and RST set at same time
    $IPTABLES -A INPUT -i eth0 -p tcp --tcp-flags FIN,RST FIN,RST -j MY_DROP
    $IPTABLES -A FORWARD -p tcp --tcp-flags FIN,RST FIN,RST -j MY_DROP

    # FIN without ACK
    $IPTABLES -A INPUT -p tcp --tcp-flags ACK,FIN FIN -j MY_DROP
    $IPTABLES -A FORWARD -p tcp --tcp-flags ACK,FIN FIN -j MY_DROP

    # PSH without ACK
    $IPTABLES -A INPUT -p tcp --tcp-flags ACK,PSH PSH -j MY_DROP
    $IPTABLES -A FORWARD -p tcp --tcp-flags ACK,PSH PSH -j MY_DROP

    # URG without ACK
    $IPTABLES -A INPUT -p tcp --tcp-flags ACK,URG URG -j MY_DROP
    $IPTABLES -A FORWARD -p tcp --tcp-flags ACK,URG URG -j MY_DROP

    # Loopback-Network-Communication permit
    $IPTABLES -A INPUT -i lo -j ACCEPT
    $IPTABLES -A OUTPUT -o lo -j ACCEPT

    # Loopback-Network-Communication allow
    $IPTABLES -A OUTPUT -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT
    $IPTABLES -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
    #$IPTABLES -A INPUT -i lo -j ACCEPT
    #$IPTABLES -A OUTPUT -o lo -j ACCEPT
    
    # Connection-Tracking activate
    $IPTABLES -A OUTPUT -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT
    $IPTABLES -A FORWARD ! -i ppp0 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT
    $IPTABLES -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT
    $IPTABLES -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
    
    # Force SYN packets check
    $IPTABLES -A INPUT -i eth0 -p tcp ! --syn -m state --state NEW -j DROP

    # Force Fragments packets check
    $IPTABLES -A INPUT -i eth0 -f -j DROP

    # XMAS packets
    $IPTABLES -A INPUT -i eth0 -p tcp --tcp-flags ALL ALL -j DROP

    # Drop Null Packets
    $IPTABLES -A INPUT -i eth0 -p tcp --tcp-flags ALL NONE -j DROP

    # Block Spoofing
    #$IPTABLES -I INPUT -s 10.0.0.0/8 -j DROP
    $IPTABLES -I INPUT -i eth0 -s 172.16.0.0/12 -j DROP
    $IPTABLES -I INPUT -i eth0 -s 192.168.0.0/16 -j DROP
    $IPTABLES  -I INPUT -i eth0 -s 127.0.0.0/8 -j DROP

    # Block Ping
    $IPTABLES  -A INPUT -i eth0 -p icmp --icmp-type echo-request -j DROP
    # Block Brute Force ftp
    $IPTABLES -A INPUT -i eth0 -p tcp --dport 21 -m state --state NEW -m recent --set --name FTP
    $IPTABLES -A INPUT -i eth0 -p tcp --dport 21 -m state --state NEW -m recent --update --seconds 60 --hitcount 8 --rttl --name FTP -j DROP
   # Block Brute Force ssh
    $IPTABLES -A INPUT -i eth0 -p tcp --dport 22 -m state --state NEW -m recent --set --name SSH
    $IPTABLES -A INPUT -i eth0 -p tcp --dport 22 -m state --state NEW -m recent --update --seconds 60 --hitcount 8 --rttl --name SSH -j DROP

    # HTTP
    #$IPTABLES -A INPUT -m state --state NEW -p tcp --dport 80-j ACCEPT

    # HTTPS
    #$IPTABLES -A INPUT -m state --state NEW -p tcp --dport 443 -j ACCEPT

    # SMTP
    $IPTABLES -A INPUT -i eth0 -m state --state NEW -p tcp --dport 25 -j ACCEPT

    # SMTPS
    $IPTABLES -A INPUT -i eth0 -m state --state NEW -p tcp --dport 465 -j ACCEPT

    # Torrents
    $IPTABLES -A INPUT -i eth0 -p tcp --dport 45990:45995 -m state --state NEW -m recent --set --name TORRENT
    $IPTABLES -A INPUT -i eth0 -p tcp --dport 45990:45995 -m state --state NEW -m recent --update --seconds 60 --rttl --name TORRENT -j ACCEPT
    $IPTABLES -A INPUT -i eth0 -m state --state NEW -p tcp --dport 54556:54560 -j ACCEPT

    # Specific Ip's for FTP
    # Accept - Drop
    #$IPTABLES -t filter -I INPUT 1 -p tcp --dport 21 -s  $IIP1/32 -j ACCEPT
    #$IPTABLES -t filter -I INPUT 2 -p tcp --dport 21 -s  $IIP2/32 -j ACCEPT
#    $IPTABLES -t filter -I INPUT 3 -p tcp --dport 21 -s  $IIP3/32 -j ACCEPT
#    $IPTABLES -t filter -I INPUT 4 -p tcp --dport 21 -s  $IIP4/16 -j ACCEPT
    $IPTABLES -t filter -I INPUT 5 -p tcp --dport 21 ! -s $IIP1/32 -j DROP
    # Reject
    #$IPTABLES -t filter -I INPUT 1 -p tcp --dport 21 ! -s $IIP5/32 -j REJECT
    
    # Specific Ip's for FTP Passive Ports
    # Accept - Drop
    #$IPTABLES -t filter -I INPUT 1 -p tcp --dport 45980:45985 -s  $IIP1/32 -j ACCEPT
    #$IPTABLES -t filter -I INPUT 2 -p tcp --dport 45980:45985 -s  $IIP2/32 -j ACCEPT
#    $IPTABLES -t filter -I INPUT 3 -p tcp --dport 45980:45985 -s  $IIP3/32 -j ACCEPT
#    $IPTABLES -t filter -I INPUT 4 -p tcp --dport 45980:45985 -s  $IIP4/16 -j ACCEPT
    #$IPTABLES -t filter -I INPUT 5 -p tcp --dport 45980:45985 ! -s $IIP1/32 -j DROP
    # Reject
    #$IPTABLES -t filter -I INPUT 1 -p tcp --dport 58035:58045 ! -s $IIP5/32 -j REJECT    

    # Specific Ip's for SSH
    # Accept - Drop
   $IPTABLES -t filter -I INPUT 1 -p tcp --dport 22 -s  $IIP1/32 -j ACCEPT
    $IPTABLES -t filter -I INPUT 2 -p tcp --dport 22 -s  $IIP2/32 -j ACCEPT
#    $IPTABLES -t filter -I INPUT 3 -p tcp --dport 22 -s  $IIP3/32 -j ACCEPT
#    $IPTABLES -t filter -I INPUT 4 -p tcp --dport 22 -s  $IIP4/32 -j ACCEPT
    $IPTABLES -t filter -I INPUT 5 -p tcp --dport 22 ! -s $IIP1/32 -j DROP
    # SSHGuard
    $IPTABLES -N sshguard
    $IPTABLES -A INPUT -p tcp --dport 22 -j sshguard
    # Reject
    #$IPTABLES -t filter -I INPUT 1 -p tcp --dport 22 ! -s $IIP5/32 -j REJECT
    
    # For Internal Use Only
    # Samba Server
    # Tower 1
#    $IPTABLES -A OUTPUT -p udp -s $IIP3 --sport 137 -d 0/0 --dport 137 -j ACCEPT
#    $IPTABLES -A OUTPUT -p udp -s $IIP3 --sport 138 -d 0/0 --dport 138 -j ACCEPT
#    $IPTABLES -A OUTPUT -p tcp -s $IIP3 --sport 1024:65535 -d $IIP6 --dport 139 -m state --state NEW,ESTABLISHED -j ACCEPT
#    $IPTABLES -A INPUT -p udp -s $IIP6 --sport 137 -d $IIP3 --dport 137 -j ACCEPT
#    $IPTABLES -A INPUT -p udp -s $IIP6 --sport 138 -d $IIP3 --dport 138 -j ACCEPT
#    $IPTABLES -A INPUT -p tcp -s $IIP6 --sport 139 -d $IIP3 --dport 1024:65535 -m state --state ESTABLISHED -j ACCEPT
    # Tower 2
#    $IPTABLES -A OUTPUT -p udp -s $IIP1 --sport 137 -d 0/0 --dport 137 -j ACCEPT
#    $IPTABLES -A OUTPUT -p udp -s $IIP1 --sport 138 -d 0/0 --dport 138 -j ACCEPT
#    $IPTABLES -A OUTPUT -p tcp -s $IIP1 --sport 1024:65535 -d $IIP3 --dport 139 -m state --state NEW,ESTABLISHED -j ACCEPT
#    $IPTABLES -A INPUT -p udp -s $IIP3 --sport 137 -d $IIP1 --dport 137 -j ACCEPT
#    $IPTABLES -A INPUT -p udp -s $IIP3 --sport 138 -d $IIP1 --dport 138 -j ACCEPT
#    $IPTABLES -A INPUT -p tcp -s $IIP3 --sport 139 -d $IIP1 --dport 1024:65535 -m state --state ESTABLISHED -j ACCEPT
    # Tower 3
    #$IPTABLES -A OUTPUT -p udp -s $IIP4 --sport 137 -d 0/0 --dport 137 -j ACCEPT
    #$IPTABLES -A OUTPUT -p udp -s $IIP4 --sport 138 -d 0/0 --dport 138 -j ACCEPT
    #$IPTABLES -A OUTPUT -p tcp -s $IIP4 --sport 1024:65535 -d $IIP3 --dport 139 -m state --state NEW,ESTABLISHED -j ACCEPT
    #$IPTABLES -A INPUT -p udp -s $IIP3 --sport 137 -d $IIP4 --dport 137 -j ACCEPT
    #$IPTABLES -A INPUT -p udp -s $IIP3 --sport 138 -d $IIP4 --dport 138 -j ACCEPT
    #$IPTABLES -A INPUT -p tcp -s $IIP3 --sport 139 -d $IIP4 --dport 1024:65535 -m state --state ESTABLISHED -j ACCEPT
    # IRC
    #$IPTABLES -A INPUT -m state --state NEW -p tcp --dport 6667 -j ACCEPT

    # TELNET
    $IPTABLES -A INPUT -m state --state NEW -p tcp --dport 1833 -j ACCEPT

    # Default-Policies for REJECT
    $IPTABLES -A INPUT -i eth0 -j MY_REJECT
    $IPTABLES -A OUTPUT -j MY_REJECT

    # Max. 500/Seconds (5/Jiffie) send
    echo 5 > /proc/sys/net/ipv4/icmp_ratelimit

    # Memory Allocation and -Timing for IP-De/-Fragmenting
    echo 262144 > /proc/sys/net/ipv4/ipfrag_high_thresh
    echo 196608 > /proc/sys/net/ipv4/ipfrag_low_thresh
    echo 30 > /proc/sys/net/ipv4/ipfrag_time

    # TCP-FIN-Timeout to Protection for DoS-Attack
    echo 30 > /proc/sys/net/ipv4/tcp_fin_timeout

   # Maximal 3 Answers on TCP-SYN
    echo 3 > /proc/sys/net/ipv4/tcp_retries1

    # TCP-Packet maximally 15x repeat
    echo 15 > /proc/sys/net/ipv4/tcp_retries2

   #
   ## Blacklist
   #

   for x in `grep -v ^# $BLACKLIST | awk '{print $1}'`; do
          echo "Denying $x..."
          $IPTABLES -I INPUT -t filter -s $x -j DROP
   done

   #
   ## Whitelist
   #

   for x in `grep -v ^# $WHITELIST | awk '{print $1}'`; do
          echo "Permitting $x..."
          $IPTABLES -I INPUT -t filter -s $x -j ACCEPT
   done  

   echo "Firewall Started"
    ;;

  stop)
    echo "FW Script Stopped"
    # Table Flush
    $IPTABLES -F
    $IPTABLES -t nat -F
    $IPTABLES -t mangle -F
    $IPTABLES -X
    $IPTABLES -t nat -X
    $IPTABLES -t mangle -X
    # Default-Policies set
    $IPTABLES -P INPUT ACCEPT
    $IPTABLES -P OUTPUT ACCEPT
    $IPTABLES -P FORWARD ACCEPT
    ;;

  restart)
    echo "Restarting Firewall"
    sleep 2
    echo "Flushing firewall"
    echo " "
    for a in `cat /proc/net/ip_tables_names`; do
    $IPTABLES -F -t $a
    $IPTABLES -X -t $a
	  	done;
    sleep 1
    echo "Starting Firewall Now.."
    $SCRIPT start
    sleep 1
    echo "Saving New Settings"
    $SCRIPT save
    echo "Done..."
    echo "...Firewall On..."
    echo "."
    ;;
   
  save)
    echo "Saving Tables"
    $IPTABLESSAVE > $FWSAVE
    echo "IPTable Rules Saved"
    ;;
    
  restore)
    echo "Restoring IPTables Rules"
    $IPTABLESRESTORE < $FWSAVE
    echo "IPTable Rules Restored"
    ;;    

  status)
    echo "Table Filter"
    $IPTABLES -L -vn
    echo "Table Nat"
    $IPTABLES -t nat -L -vn
    echo "Table Mangle"
    $IPTABLES -t mangle -L -vn
    ;;

  *)
    echo "Incorrect Call"
    echo "Syntax: $0 {start|stop|restart|save|restore|status}"
    exit 1
    ;;

esac
